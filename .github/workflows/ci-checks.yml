
on:
  push:
    branches:
      - master
      - production
  pull_request:

name: Standard CI checks

jobs:
  Hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile

  Code_security:
    name: Code security
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Scan project
      uses: ShiftLeftSecurity/scan-action@master

  docker_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build hegex docker image
        run: |
          echo "Building on ${GITHUB_REF} branch"
          if [[ ${GITHUB_REF} == "refs/heads/production" ]]; then
            DOCKER_BUILDKIT=1 docker build --build-arg=BUILD_ENV=prod -t hegex:${{ github.sha }} -f Dockerfile .
          else
            DOCKER_BUILDKIT=1 docker build -t hegex:${{ github.sha }} -f Dockerfile .
          fi
          echo "Successfully built docker image"

      # TODO: reenable, finetune with ignore-policy instead
      # with OPA rego language (from docs)
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'hegex:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'

      - name: Push docker images
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: "hegex"
        run: |
          echo "Checking of images need to be pushed to docker registry"
          if [[ ${GITHUB_REF} == "refs/heads/master" ]]; then
            echo "On the default branch will push to the registry with latest-qa and ${{ github.sha }}-qa tags"
            docker tag hegex:${{ github.sha }} ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ github.sha }}-qa
            docker tag hegex:${{ github.sha }} ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest-qa
            docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ github.sha }}-qa
            docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest-qa
          elif [[ ${GITHUB_REF} == "refs/heads/production" ]]; then
            echo "On the default branch will push to the registry with latest-prod and ${{ github.sha }}-prod tags"
            docker tag hegex:${{ github.sha }} ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ github.sha }}-prod
            docker tag hegex:${{ github.sha }} ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest-prod
            docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${{ github.sha }}-prod
            docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest-prod
          else
            "No images will be pushed"
          fi
